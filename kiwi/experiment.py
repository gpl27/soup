import time

class Experiment:
    """
    TODO: Define how to save the results
        * By default save in python dict as a pickle
        and then allow to export to other formats
    """
    def __init__(self, path: str, args: str =None, name:str =None):
        """
        name    : Experiment name
        path    : Path to executable
        args    : Arguments to pass in the call to the executable
        _id     : Internal id, allows for same name experiments
        _props  : Custom properties to add to the report
        """
        id = time.time_ns()
        self._path = path
        self._args = args if args else ""
        self._name = name if name else f"KiwiExperiment#{id}"
        self._id = id
        self._runs = []
    
    def run(self):
        pass

    def get_results(self) -> dict:
        """Returns a dictionary containing the observed results.
        Leading `_` means the property was generated by Kiwi
        `@` means it is a user defined property, and no leading
        character is a user *provided* (Kiwi defined) property
        EXAMPLE:
        {
            'name': "MyExperiment-001-020"
            'path': "/home/gpl27/soup/run.sh"
            'args': "-i inst001.dat"
            '_id':  "1720562683659683387"
            '_runs': [
                {
                    '_id': "1720566122577771908"
                    '_runtime': "70866072299"
                    '_logs': ./kiwi/var/r1720566122577771908.log
                    '@cost': 243
                }
            ]
        }
        """
        pass

    def attach_output_handler(self, handler: function):
        """By default will create a log file kiwi/var/r<timestamp>.log
        with everything that would be printed to STDOUT
        You can attach a function that will read the program output
        and create custom properties in the experiment runs
        """
        pass